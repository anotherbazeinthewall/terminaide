[tool.poetry]
name = "terminaide"
version = "0.0.3"
description = "Serve Python CLI applications in the browser using ttyd"
repository = "https://github.com/anotherbazeinthewall/terminaide"
authors = ["Alex Basile <basileaw@gmail.com>"]
packages = [{ include = "terminaide" }]
readme = "README.md"
license = "MIT"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = ">=0.104.0"
jinja2 = ">=3.1.2"
httpx = ">=0.25.0"
websockets = ">=12.0"
pydantic = ">=2.4.2"
readchar = "^4.2.1"

[tool.poetry.group.test.dependencies]
uvicorn = ">=0.24.0"

[tool.poetry.group.dev.dependencies]
docker = "^7.1.0"
poethepoet = "^0.33.0"

[tool.poe.tasks]
contain = "python tests/container.py"

[tool.poe.tasks.serve]
cmd = "python tests/server.py"
args = [
  { name = "mode", default = "demo", help = "Server mode (demo, single, multi_no_root, etc.)" },
  { name = "port", default = "8000", help = "Port number" },
]
help = """Run the test server in different configuration modes:

- demo: Default mode with the built-in demo at root
- single: Single script at root path
- multi_no_root: Multiple scripts with demo at root
- multi_with_root: Multiple scripts with client.py at root
- combined: Both client_script and script_routes defined
- user_root_after/before: Custom user route at root path"""

[tool.poe.tasks.release]
args = ["type"]
help = "Release a new version (patch/minor/major)"
sequence = [
  { cmd = "poetry version ${type}" },
  { cmd = "git add pyproject.toml" },
  { shell = """
      VERSION=$(poetry version -s)
      git commit -m "release $VERSION"
      git tag v$VERSION
      git push && git push --tags
    """ },
]
